name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        timeout: 30s
        command_timeout: 10m
        script: |
          # 디렉토리 존재 확인 및 생성
          if [ ! -d "/home/${{ secrets.USERNAME }}/startup-trpg-llm-backend" ]; then
            echo "저장소를 클론합니다..."
            cd /home/${{ secrets.USERNAME }}
            git clone https://github.com/StartupTRPG/llm-backend.git startup-trpg-llm-backend
          fi
          
          # 디렉토리로 이동
          cd /home/${{ secrets.USERNAME }}/startup-trpg-llm-backend
          
          # Git 원격 저장소 설정 확인
          if ! git remote get-url origin > /dev/null 2>&1; then
            echo "Git 원격 저장소를 설정합니다..."
            git remote add origin https://github.com/StartupTRPG/llm-backend.git
          fi
          
          # 최신 코드 가져오기
          echo "최신 코드를 가져옵니다..."
          git fetch origin
          git reset --hard origin/main
          
          # deploy.sh 실행 권한 부여 및 실행
          if [ -f "deploy.sh" ]; then
            chmod +x deploy.sh
            ./deploy.sh
          else
            echo "deploy.sh 파일이 없습니다. 수동으로 배포를 진행합니다..."
            # 수동 배포 스크립트
            docker-compose down || true
            docker-compose build --no-cache
            docker-compose up -d
            echo "배포 완료!"
          fi